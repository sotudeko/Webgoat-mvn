pipeline {
    agent any

    environment {
        REGISTRY = 'sola.local:18082'
        IMAGENAME = 'webgoat'
        ARTEFACT_NAME = "${WORKSPACE}/target/WebGoat-${BUILD_VERSION}.war"
        JENKINS_CRED = 'docker-rgy-id'
        KLAR = "/Users/sotudeko/Development/docker-image-scan/clair/klar"
    }

    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -Dproject.version=$BUILD_VERSION -Dmaven.test.failure.ignore clean package'
            }
            post {
                success {
                    echo 'Now archiving...'
                    archiveArtifacts artifacts: "**/target/*.war"
                    sh '/bin/cp ${ARTEFACT_NAME} WebGoat.war'
                }
            }
        }

        stage('Nexus IQ Scan'){
            steps {
                script{
                    def policyEvaluation = nexusPolicyEvaluation failBuildOnNetworkError: true, iqApplication: selectedApplication('webgoat-legacy'), iqScanPatterns: [[scanPattern: '**/*.war']], iqStage: 'build', jobCredentialsId: 'wguser'
                }
            }
        }

        stage('Build docker image'){
            steps {
                script {
                    docker.withRegistry("https://${REGISTRY}", "${JENKINS_CRED}") {
                        def customImage = docker.build("${IMAGENAME}")
                        customImage.push("${BUILD_VERSION}")
                        customImage.push("latest")
                    }
                }
            }
        }

        stage('Scan docker image'){
            steps {
                script {
                    sh 'CLAIR_ADDR=http://localhost:6060 ${KLAR} $IMAGENAME:${BUILD_VERSION}'
                }
            }
        }
    }
}

